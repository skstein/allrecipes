geom_vline(aes(xintercept=mean(vanguard_savings)), color="red", linetype="dashed") +
geom_vline(aes(xintercept=quantile(vanguard_savings, 0.1)), color="blue", linetype="dashed") +
scale_x_continuous(name="Inflation-Adjusted Savings (Vanguard)", labels=comma) +
scale_y_continuous(name="Percent of Outcomes", labels=percent) +
annotation_custom(annotate1) +
annotation_custom(annotate2)
df <- data.frame("pctile" = seq(1, 99, 1))
df$ira <- quantile(data$ira_savings, seq(0.01, 0.99, 0.01))
df$vanguard <- quantile(data$vanguard_savings, seq(0.01, 0.99, 0.01))
df$employee_401k <- quantile(data$employee_401k_savings, seq(0.01, 0.99, 0.01))
df$prudential <- quantile(data$prudential_savings, seq(0.01, 0.99, 0.01))
df$cashout <- quantile(data$cashout_savings, seq(0.01, 0.99, 0.01))
df$total <- rowSums(df[,2:4])
ggplot(df) +
geom_line(aes(pctile, employee_401k), color="forestgreen", linetype=2) +
geom_line(aes(pctile, vanguard), color="blue", linetype=2) +
geom_line(aes(pctile, ira), color="red", linetype=2) +
geom_line(aes(pctile, prudential), color="darkgray", linetype=2) +
geom_line(aes(pctile, total)) +
scale_x_continuous(name="Percentile", breaks=seq(0, 100, 10)) +
scale_y_continuous(name="Inflation-Adjusted Savings", breaks=seq(0, 10000000, 1000000), labels=comma)
ggplot(df) +
geom_line(aes(pctile, prudential), color="black") +
geom_line(aes(pctile, cashout), color="red") +
scale_x_continuous(name="Percentile", breaks=seq(10, 90, 10)) +
scale_y_continuous(name="Inflation-Adjusted Savings", breaks=seq(0, 500000, 50000), labels=comma)
p10 <- sum(quantile(data$ira_savings, 0.1), quantile(data$employee_401k_savings, 0.1), quantile(data$prudential_savings, 0.1))
p50 <- sum(quantile(data$ira_savings, 0.5), quantile(data$employee_401k, 0.5), quantile(data$prudential_savings, 0.5))
p90 <- sum(quantile(data$ira_savings, 0.9), quantile(data$employee_401k, 0.9), quantile(data$prudential_savings, 0.9))
p10*0.04
p50*0.04
p90*0.04
ggplot(df) +
geom_line(aes(pctile, employee_401k), color="forestgreen", linetype=2) +
geom_line(aes(pctile, vanguard), color="blue", linetype=2) +
geom_line(aes(pctile, ira), color="red", linetype=2) +
geom_line(aes(pctile, prudential), color="darkgray", linetype=2) +
geom_line(aes(pctile, total)) +
scale_x_continuous(name="Percentile", breaks=seq(0, 100, 10)) +
scale_y_continuous(name="Inflation-Adjusted Savings", breaks=seq(0, 10000000, 1000000), labels=comma)
annotate1 <- grobTree(textGrob(paste("50P =", formatC(median(vanguard_savings), format="d", big.mark=",")),
x=0.65, y=0.92, hjust=0, gp=gpar(col="red", fontsize=10)))
annotate2 <- grobTree(textGrob(paste("10P =", formatC(quantile(vanguard_savings, 0.1), format="d", big.mark=",")),
x=0.65, y=0.85, hjust=0, gp=gpar(col="blue", fontsize=10)))
ggplot(data, aes(vanguard_savings)) +
geom_histogram(aes(y=(..count..)/sum(..count..)), binwidth=200000, color="black", fill="white") +
geom_vline(aes(xintercept=mean(vanguard_savings)), color="red", linetype="dashed") +
geom_vline(aes(xintercept=quantile(vanguard_savings, 0.1)), color="blue", linetype="dashed") +
scale_x_continuous(name="Inflation-Adjusted Savings (Vanguard)", labels=comma) +
scale_y_continuous(name="Percent of Outcomes", labels=percent) +
annotation_custom(annotate1) +
annotation_custom(annotate2)
60000*.15
60000*0.35
39000*.15
0.2304/0.1167
library(tm)
library(SnowballC)
library(NLP)
library(qlcMatrix)
library(proxy)
library(dplyr)
library(tidytext)
library(tidyr)
library(stringr)
library(ggplot2)
data("stop_words")
setwd("~/Dropbox/GradSchool/CorpCorp/hiring_analysis/data")
# setwd("~/../../../../../../ifs/gsb/amirgo/data/hiring")
load("jobvite_1_2_merged_anonymized.RData")
data <- anon
# Remove duplicate applications from the same individual
hired_ids <- data[data$Hired==1, "Jobvite.ID"]
hired_ids_dup <- data[data$Jobvite.ID %in% hired_ids, c("Jobvite.ID", "Hired")]
hired_ids_dup <- hired_ids_dup[order(hired_ids_dup$Jobvite.ID, -hired_ids_dup$Hired),]
data <- data[order(data$Jobvite.ID, -data$Hired),]
data <- data[!duplicated(data$Jobvite.ID),]
data$Q <- paste(data$Q1, data$Q2, data$Q3, sep=" ")
# TF-IDF
q3_hirelist <- data$Hired[data$Q3!=""]
q3 <- VCorpus(VectorSource(data$Q3[data$Q3!=""]))
writeLines(as.character(q3[[1]]))
q3 <- tm_map(q3, removeNumbers)
q3 <- tm_map(q3, removePunctuation)
q3 <- tm_map(q3, content_transformer(tolower))
q3 <- tm_map(q3, removeWords, stopwords("english"))
q3 <- tm_map(q3, stripWhitespace)
dtm3 <- DocumentTermMatrix(q3)
dtm3 <- as.matrix(dtm3)
dtm3_binary <- ifelse(dtm3>=1, 1, 0)
tf3 <- dtm3
idf3 <- log(nrow(dtm3)/colSums(dtm3_binary))
tfidf3 <- dtm3
for (word in names(idf3)){
tfidf3[,word] <- tf3[,word] * idf3[word]
}
tfidf3_means <- colMeans(tfidf3)
tfidf3_means <- rev(tfidf3_means[order(tfidf3_means)])
tfidf3_means[1:10]
# Not hired
tfidf3_nothired <- tfidf3[q3_hirelist==0,]
tfidf3_means_nothired <- colMeans(tfidf3_nothired)
tfidf3_means_nothired <- rev(tfidf3_means_nothired[order(tfidf3_means_nothired)])
tfidf3_means_nothired[1:10]
df3_nothired <- data_frame(word=names(tfidf3_means_nothired), tf_idf=tfidf3_means_nothired) %>%
arrange(desc(tf_idf))
colnames(df3_nothired) <- c("word", "tf_idf_nothired")
# Hired
tfidf3_hired <- tfidf3[q3_hirelist==1,]
tfidf3_means_hired <- colMeans(tfidf3_hired)
tfidf3_means_hired <- rev(tfidf3_means_hired[order(tfidf3_means_hired)])
tfidf3_means_hired[1:10]
#tfidf3_means_hired <- tfidf3_means_hired[names(tfidf3_means_hired)!="milton"]
df3_hired <- data_frame(word=names(tfidf3_means_hired), tf_idf=tfidf3_means_hired) %>%
arrange(desc(tf_idf))
colnames(df3_hired) <- c("word", "tf_idf_hired")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("darkgreen", "green3"))(15))
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff$word <- ifelse(df3_diff$word=="sungevity", yes="partnername", no=df3_diff$word)
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Top Positive Differences in TF-IDF Scores") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Words") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_nothired.png", width=6, height=3, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(tf_idf_diff) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("orangered3", "orange"))(15)) %>%
mutate(tf_idf_diff=abs(tf_idf_diff))
df3_diff$word <- ifelse(df3_diff$word=="sungevity", yes="partnername", no=df3_diff$word)
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Top Negative Differences in TF-IDF Scores") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Hired' Words") +
labs(x=NULL, y="Difference in TF-IDF (H-NH)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_hired.png", width=6, height=3, units="in")
q3_hirelist <- data$Hired[data$Q3!=""]
q3 <- VCorpus(VectorSource(data$Q3[data$Q3!=""]))
writeLines(as.character(q3[[1]]))
q3 <- tm_map(q3, removeNumbers)
q3 <- tm_map(q3, removePunctuation)
q3 <- tm_map(q3, content_transformer(tolower))
q3 <- tm_map(q3, removeWords, stopwords("english"))
q3 <- tm_map(q3, stripWhitespace)
BigramTokenizer <- function(x) unlist(lapply(ngrams(words(x), 2), paste, collapse=" "), use.names=FALSE)
dtm3 <- DocumentTermMatrix(q3, control=list(tokenize=BigramTokenizer))
dtm3 <- removeSparseTerms(dtm3, 0.99)
dtm3 <- as.matrix(dtm3)
dtm3_binary <- ifelse(dtm3>=1, 1, 0)
tf3 <- dtm3
idf3 <- log(nrow(dtm3)/colSums(dtm3_binary))
tfidf3 <- dtm3
for (word in names(idf3)){
tfidf3[,word] <- tf3[,word] * idf3[word]
}
tfidf3_means <- colMeans(tfidf3)
tfidf3_means <- rev(tfidf3_means[order(tfidf3_means)])
tfidf3_means[1:10]
# Not hired
tfidf3_nothired <- tfidf3[q3_hirelist==0,]
tfidf3_means_nothired <- colMeans(tfidf3_nothired)
tfidf3_means_nothired <- rev(tfidf3_means_nothired[order(tfidf3_means_nothired)])
tfidf3_means_nothired[1:10]
df3_nothired <- data_frame(word=names(tfidf3_means_nothired), tf_idf=tfidf3_means_nothired) %>%
arrange(desc(tf_idf))
colnames(df3_nothired) <- c("bigram", "tf_idf_nothired")
# Hired
tfidf3_hired <- tfidf3[q3_hirelist==1,]
tfidf3_means_hired <- colMeans(tfidf3_hired)
tfidf3_means_hired <- rev(tfidf3_means_hired[order(tfidf3_means_hired)])
tfidf3_means_hired[1:10]
df3_hired <- data_frame(word=names(tfidf3_means_hired), tf_idf=tfidf3_means_hired) %>%
arrange(desc(tf_idf))
colnames(df3_hired) <- c("bigram", "tf_idf_hired")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Bigrams") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_nothired.png", width=6, height=3.3, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(tf_idf_diff) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("orangered3", "orange"))(15)) %>%
mutate(tf_idf_diff=abs(tf_idf_diff))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df1_diff$color) +
ggtitle("Q3 Most Important 'Hired' Bigrams") +
labs(x=NULL, y="Difference in TF-IDF (H-NH)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Hired' Bigrams") +
labs(x=NULL, y="Difference in TF-IDF (H-NH)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_hired.png", width=6, height=3.3, units="in")
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_hired.png", width=6, height=3.5, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Bigrams") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_nothired.png", width=6, height=3.5, units="in")
library(tm)
library(SnowballC)
library(NLP)
library(qlcMatrix)
library(proxy)
library(dplyr)
library(tidytext)
library(tidyr)
library(stringr)
library(ggplot2)
library(corpus)
data("stop_words")
setwd("~/Dropbox/GradSchool/CorpCorp/hiring_analysis/data")
# setwd("~/../../../../../../ifs/gsb/amirgo/data/hiring")
load("jobvite_1_2_merged_anonymized.RData")
data <- anon
# Remove duplicate applications from the same individual
hired_ids <- data[data$Hired==1, "Jobvite.ID"]
hired_ids_dup <- data[data$Jobvite.ID %in% hired_ids, c("Jobvite.ID", "Hired")]
hired_ids_dup <- hired_ids_dup[order(hired_ids_dup$Jobvite.ID, -hired_ids_dup$Hired),]
data <- data[order(data$Jobvite.ID, -data$Hired),]
data <- data[!duplicated(data$Jobvite.ID),]
data$Q <- paste(data$Q1, data$Q2, data$Q3, sep=" ")
# TF-IDF
q3_hirelist <- data$Hired[data$Q3!=""]
q3 <- VCorpus(VectorSource(data$Q3[data$Q3!=""]))
writeLines(as.character(q3[[1]]))
q3 <- tm_map(q3, removeNumbers)
q3 <- tm_map(q3, removePunctuation)
q3 <- tm_map(q3, content_transformer(tolower))
q3 <- tm_map(q3, removeWords, stopwords("english"))
q3 <- tm_map(q3, stripWhitespace)
words3 <- unlist(text_types(q3))
stems3 <- SnowballC::wordStem(words3, "english")
q3 <- tm_map(q3, stemDocument)
dtm3 <- DocumentTermMatrix(q3)
dtm3 <- as.matrix(dtm3)
dtm3_binary <- ifelse(dtm3>=1, 1, 0)
tf3 <- dtm3
idf3 <- log(nrow(dtm3)/colSums(dtm3_binary))
tfidf3 <- dtm3
for (word in names(idf3)){
tfidf3[,word] <- tf3[,word] * idf3[word]
}
tfidf3_means <- colMeans(tfidf3)
tfidf3_means <- rev(tfidf3_means[order(tfidf3_means)])
tfidf3_means[1:10]
# Not hired
tfidf3_nothired <- tfidf3[q3_hirelist==0,]
tfidf3_means_nothired <- colMeans(tfidf3_nothired)
tfidf3_means_nothired <- rev(tfidf3_means_nothired[order(tfidf3_means_nothired)])
tfidf3_means_nothired[1:10]
df3_nothired <- data_frame(word=names(tfidf3_means_nothired), tf_idf=tfidf3_means_nothired) %>%
arrange(desc(tf_idf))
colnames(df3_nothired) <- c("word", "tf_idf_nothired")
# Hired
tfidf3_hired <- tfidf3[q3_hirelist==1,]
tfidf3_means_hired <- colMeans(tfidf3_hired)
tfidf3_means_hired <- rev(tfidf3_means_hired[order(tfidf3_means_hired)])
tfidf3_means_hired[1:10]
df3_hired <- data_frame(word=names(tfidf3_means_hired), tf_idf=tfidf3_means_hired) %>%
arrange(desc(tf_idf))
colnames(df3_hired) <- c("word", "tf_idf_hired")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff$word <- ifelse(df3_diff$word=="sungev", yes="partnername", no=df3_diff$word)
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Top Positive Differences in TF-IDF Scores") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Word Stems") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_nothired_stemmed.png", width=6, height=3, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(tf_idf_diff) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("orangered3", "orange"))(15)) %>%
mutate(tf_idf_diff=abs(tf_idf_diff))
df3_diff$word <- ifelse(df3_diff$word=="sungev", yes="partnername", no=df3_diff$word)
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Top Negative Differences in TF-IDF Scores") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Hired' Word Stems") +
labs(x=NULL, y="Difference in TF-IDF (H-NH)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_hired_stemmed.png", width=6, height=3, units="in")
# TF-IDF
q3_hirelist <- data$Hired[data$Q3!=""]
q3 <- VCorpus(VectorSource(data$Q3[data$Q3!=""]))
writeLines(as.character(q3[[1]]))
q3 <- tm_map(q3, removeNumbers)
q3 <- tm_map(q3, removePunctuation)
q3 <- tm_map(q3, content_transformer(tolower))
q3 <- tm_map(q3, removeWords, stopwords("english"))
q3 <- tm_map(q3, stripWhitespace)
dtm3 <- DocumentTermMatrix(q3)
dtm3 <- as.matrix(dtm3)
dtm3_binary <- ifelse(dtm3>=1, 1, 0)
tf3 <- dtm3
idf3 <- log(nrow(dtm3)/colSums(dtm3_binary))
tfidf3 <- dtm3
for (word in names(idf3)){
tfidf3[,word] <- tf3[,word] * idf3[word]
}
tfidf3_means <- colMeans(tfidf3)
tfidf3_means <- rev(tfidf3_means[order(tfidf3_means)])
tfidf3_means[1:10]
# Not hired
tfidf3_nothired <- tfidf3[q3_hirelist==0,]
tfidf3_means_nothired <- colMeans(tfidf3_nothired)
tfidf3_means_nothired <- rev(tfidf3_means_nothired[order(tfidf3_means_nothired)])
tfidf3_means_nothired[1:10]
df3_nothired <- data_frame(word=names(tfidf3_means_nothired), tf_idf=tfidf3_means_nothired) %>%
arrange(desc(tf_idf))
colnames(df3_nothired) <- c("word", "tf_idf_nothired")
# Hired
tfidf3_hired <- tfidf3[q3_hirelist==1,]
tfidf3_means_hired <- colMeans(tfidf3_hired)
tfidf3_means_hired <- rev(tfidf3_means_hired[order(tfidf3_means_hired)])
tfidf3_means_hired[1:10]
#tfidf3_means_hired <- tfidf3_means_hired[names(tfidf3_means_hired)!="milton"]
df3_hired <- data_frame(word=names(tfidf3_means_hired), tf_idf=tfidf3_means_hired) %>%
arrange(desc(tf_idf))
colnames(df3_hired) <- c("word", "tf_idf_hired")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff$word <- ifelse(df3_diff$word=="sungevity", yes="partnername", no=df3_diff$word)
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Words") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_nothired.png", width=6, height=3.1, units="in")
ggsave("../../hiring_text_analysis/q3_top_tfidf_nothired.png", width=6, height=3, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(tf_idf_diff) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("orangered3", "orange"))(15)) %>%
mutate(tf_idf_diff=abs(tf_idf_diff))
df3_diff$word <- ifelse(df3_diff$word=="sungevity", yes="partnername", no=df3_diff$word)
df3_diff %>%
ggplot(aes(reorder(word, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Hired' Words") +
labs(x=NULL, y="Difference in TF-IDF (H-NH)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_hired.png", width=6, height=3.1, units="in")
q3_hirelist <- data$Hired[data$Q3!=""]
q3 <- VCorpus(VectorSource(data$Q3[data$Q3!=""]))
writeLines(as.character(q3[[1]]))
q3 <- tm_map(q3, removeNumbers)
q3 <- tm_map(q3, removePunctuation)
q3 <- tm_map(q3, content_transformer(tolower))
q3 <- tm_map(q3, removeWords, stopwords("english"))
q3 <- tm_map(q3, stripWhitespace)
q3 <- tm_map(q3, stemDocument)
BigramTokenizer <- function(x) unlist(lapply(ngrams(words(x), 2), paste, collapse=" "), use.names=FALSE)
dtm3 <- DocumentTermMatrix(q3, control=list(tokenize=BigramTokenizer))
dtm3 <- removeSparseTerms(dtm3, 0.99)
dtm3 <- as.matrix(dtm3)
dtm3_binary <- ifelse(dtm3>=1, 1, 0)
tf3 <- dtm3
idf3 <- log(nrow(dtm3)/colSums(dtm3_binary))
tfidf3 <- dtm3
for (word in names(idf3)){
tfidf3[,word] <- tf3[,word] * idf3[word]
}
tfidf3_means <- colMeans(tfidf3)
tfidf3_means <- rev(tfidf3_means[order(tfidf3_means)])
tfidf3_means[1:10]
# Not hired
tfidf3_nothired <- tfidf3[q3_hirelist==0,]
tfidf3_means_nothired <- colMeans(tfidf3_nothired)
tfidf3_means_nothired <- rev(tfidf3_means_nothired[order(tfidf3_means_nothired)])
tfidf3_means_nothired[1:10]
df3_nothired <- data_frame(word=names(tfidf3_means_nothired), tf_idf=tfidf3_means_nothired) %>%
arrange(desc(tf_idf))
colnames(df3_nothired) <- c("bigram", "tf_idf_nothired")
# Hired
tfidf3_hired <- tfidf3[q3_hirelist==1,]
tfidf3_means_hired <- colMeans(tfidf3_hired)
tfidf3_means_hired <- rev(tfidf3_means_hired[order(tfidf3_means_hired)])
tfidf3_means_hired[1:10]
df3_hired <- data_frame(word=names(tfidf3_means_hired), tf_idf=tfidf3_means_hired) %>%
arrange(desc(tf_idf))
colnames(df3_hired) <- c("bigram", "tf_idf_hired")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Bigram Stems") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_nothired_stemmed.png", width=6, height=3.1, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(tf_idf_diff) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("orangered3", "orange"))(15)) %>%
mutate(tf_idf_diff=abs(tf_idf_diff))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Hired' Bigram Stems") +
labs(x=NULL, y="Difference in TF-IDF (H-NH)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_hired_stemmed.png", width=6, height=3.1, units="in")
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_nothired_stemmed.png", width=6, height=3.2, units="in")
df3_diff <- full_join(df3_hired, df3_nothired) %>%
mutate(tf_idf_diff=tf_idf_nothired-tf_idf_hired) %>%
arrange(desc(tf_idf_diff)) %>%
mutate(id=row_number()) %>%
filter(id<=15) %>%
mutate(color=colorRampPalette(c("deeppink4", "lightpink2"))(15))
df3_diff %>%
ggplot(aes(reorder(bigram, -tf_idf_diff), tf_idf_diff)) +
geom_bar(stat="identity", fill=df3_diff$color) +
ggtitle("Q3 Most Important 'Not Hired' Bigram Stems") +
labs(x=NULL, y="Difference in TF-IDF (NH-H)") +
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("../../hiring_text_analysis/q3_top_tfidf_bigram_nothired_stemmed.png", width=6, height=3.1, units="in")
setwd("~/Desktop/allrecipes")
data <- read.table("dinner1.txt", header=FALSE, quote="", sep="|")
files <- paste("dinner", 2:24, ".txt", sep="")
for (f in files) {
temp <- read.table(f, header=FALSE, quote="", sep="|")
temp$V1 <- as.factor(temp$V1)
data <- rbind(data, temp)
}
names(data) <- c("madeitcount", "reviewcount", "starrating", "readyintime", "ingredients", "steps", "categories")
data <- data[!duplicated(data),]
save(data, file="data_allrecipes.RData")
tail(data)
